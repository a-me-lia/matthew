{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) =>\n      doc._raw.flattenedPath.includes(\"blog\")\n        ? doc._raw.flattenedPath.slice(doc._raw.flattenedPath.indexOf(\"/\") + 1)\n        : doc._raw.flattenedPath.slice(doc._raw.flattenedPath.indexOf(\"/\") + 1),\n  },\n  structuredData: {\n    type: \"object\",\n    resolve: (doc) => ({\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"BlogPosting\",\n      headline: doc.title,\n      datePublished: doc.publishedAt,\n      dateModified: doc.publishedAt,\n      description: doc.summary,\n      image: doc.image\n        ? `https://homescree.net/${doc.image}`\n        : `https://homescree.net/og?title=${doc.title}`,\n      tags: doc.tags,\n      url: `https://homescree.net/blog/${doc._raw.flattenedPath}`,\n      author: {\n        \"@type\": \"Person\",\n        name: \"Matthew Guo\",\n      },\n    }),\n  },\n};\n\nexport const Blog = defineDocumentType(() => ({\n  name: \"Blog\",\n  filePathPattern: `blog/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    publishedAt: {\n      type: \"string\",\n      required: true,\n    },\n    summary: {\n      type: \"string\",\n      required: true,\n    },\n    image: {\n      type: \"string\",\n    },\n    tags: {\n      type: \"string\",\n      required: true,\n    },\n  },\n  computedFields,\n}));\n\nexport const Project = defineDocumentType(() => ({\n  name: \"Project\",\n  contentDirPath: \"\",\n  filePathPattern: `projects/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    publishedAt: {\n      type: \"string\",\n      required: true,\n    },\n    summary: {\n      type: \"string\",\n    },\n    image: {\n      type: \"string\",\n    },\n    tags: {\n      type: \"string\",\n      required: true,\n    },\n  },\n  computedFields,\n}));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Blog, Project],\n});"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAG/C,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QACR,IAAI,KAAK,cAAc,SAAS,MAAM,IAClC,IAAI,KAAK,cAAc,MAAM,IAAI,KAAK,cAAc,QAAQ,GAAG,IAAI,CAAC,IACpE,IAAI,KAAK,cAAc,MAAM,IAAI,KAAK,cAAc,QAAQ,GAAG,IAAI,CAAC;AAAA,EAC5E;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,IACN,SAAS,CAAC,SAAS;AAAA,MACjB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,UAAU,IAAI;AAAA,MACd,eAAe,IAAI;AAAA,MACnB,cAAc,IAAI;AAAA,MAClB,aAAa,IAAI;AAAA,MACjB,OAAO,IAAI,QACP,yBAAyB,IAAI,KAAK,KAClC,kCAAkC,IAAI,KAAK;AAAA,MAC/C,MAAM,IAAI;AAAA,MACV,KAAK,8BAA8B,IAAI,KAAK,aAAa;AAAA,MACzD,QAAQ;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,IACR;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEK,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,IACR;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,IACR;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AAC/B,CAAC;",
  "names": []
}
